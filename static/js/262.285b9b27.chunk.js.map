{"version":3,"file":"static/js/262.285b9b27.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/react/dist/Range.es.js","../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs","../node_modules/@graphiql/react/dist/lint.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nclass CharacterStream {\n  constructor(sourceText) {\n    this.getStartOfToken = () => this._start;\n    this.getCurrentPosition = () => this._pos;\n    this.eol = () => this._sourceText.length === this._pos;\n    this.sol = () => this._pos === 0;\n    this.peek = () => {\n      return this._sourceText.charAt(this._pos) ? this._sourceText.charAt(this._pos) : null;\n    };\n    this.next = () => {\n      const char = this._sourceText.charAt(this._pos);\n      this._pos++;\n      return char;\n    };\n    this.eat = (pattern) => {\n      const isMatched = this._testNextCharacter(pattern);\n      if (isMatched) {\n        this._start = this._pos;\n        this._pos++;\n        return this._sourceText.charAt(this._pos - 1);\n      }\n      return void 0;\n    };\n    this.eatWhile = (match) => {\n      let isMatched = this._testNextCharacter(match);\n      let didEat = false;\n      if (isMatched) {\n        didEat = isMatched;\n        this._start = this._pos;\n      }\n      while (isMatched) {\n        this._pos++;\n        isMatched = this._testNextCharacter(match);\n        didEat = true;\n      }\n      return didEat;\n    };\n    this.eatSpace = () => this.eatWhile(/[\\s\\u00a0]/);\n    this.skipToEnd = () => {\n      this._pos = this._sourceText.length;\n    };\n    this.skipTo = (position) => {\n      this._pos = position;\n    };\n    this.match = (pattern, consume = true, caseFold = false) => {\n      let token = null;\n      let match = null;\n      if (typeof pattern === \"string\") {\n        const regex = new RegExp(pattern, caseFold ? \"i\" : \"g\");\n        match = regex.test(this._sourceText.substr(this._pos, pattern.length));\n        token = pattern;\n      } else if (pattern instanceof RegExp) {\n        match = this._sourceText.slice(this._pos).match(pattern);\n        token = match === null || match === void 0 ? void 0 : match[0];\n      }\n      if (match != null) {\n        if (typeof pattern === \"string\" || match instanceof Array && this._sourceText.startsWith(match[0], this._pos)) {\n          if (consume) {\n            this._start = this._pos;\n            if (token && token.length) {\n              this._pos += token.length;\n            }\n          }\n          return match;\n        }\n      }\n      return false;\n    };\n    this.backUp = (num) => {\n      this._pos -= num;\n    };\n    this.column = () => this._pos;\n    this.indentation = () => {\n      const match = this._sourceText.match(/\\s*/);\n      let indent = 0;\n      if (match && match.length !== 0) {\n        const whitespaces = match[0];\n        let pos = 0;\n        while (whitespaces.length > pos) {\n          if (whitespaces.charCodeAt(pos) === 9) {\n            indent += 2;\n          } else {\n            indent++;\n          }\n          pos++;\n        }\n      }\n      return indent;\n    };\n    this.current = () => this._sourceText.slice(this._start, this._pos);\n    this._start = 0;\n    this._pos = 0;\n    this._sourceText = sourceText;\n  }\n  _testNextCharacter(pattern) {\n    const character = this._sourceText.charAt(this._pos);\n    let isMatched = false;\n    if (typeof pattern === \"string\") {\n      isMatched = character === pattern;\n    } else {\n      isMatched = pattern instanceof RegExp ? pattern.test(character) : pattern(character);\n    }\n    return isMatched;\n  }\n}\n__name(CharacterStream, \"CharacterStream\");\nclass Range {\n  constructor(start, end) {\n    this.containsPosition = (position) => {\n      if (this.start.line === position.line) {\n        return this.start.character <= position.character;\n      } else if (this.end.line === position.line) {\n        return this.end.character >= position.character;\n      } else {\n        return this.start.line <= position.line && this.end.line >= position.line;\n      }\n    };\n    this.start = start;\n    this.end = end;\n  }\n  setStart(line, character) {\n    this.start = new Position(line, character);\n  }\n  setEnd(line, character) {\n    this.end = new Position(line, character);\n  }\n}\n__name(Range, \"Range\");\nclass Position {\n  constructor(line, character) {\n    this.lessThanOrEqualTo = (position) => this.line < position.line || this.line === position.line && this.character <= position.character;\n    this.line = line;\n    this.character = character;\n  }\n  setLine(line) {\n    this.line = line;\n  }\n  setCharacter(character) {\n    this.character = character;\n  }\n}\n__name(Position, \"Position\");\nexport { CharacterStream as C, Position as P, Range as R };\n","import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) || invariant(false);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { specifiedRules, NoUnusedFragmentsRule, ExecutableDefinitionsRule, KnownFragmentNamesRule, validate, Kind, LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, print, parse, GraphQLError, NoDeprecatedCustomRule } from \"graphql\";\nimport { o as onlineParser } from \"./types.es.js\";\nimport { C as CharacterStream, R as Range, P as Position } from \"./Range.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nconst specifiedSDLRules = [\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule\n];\nfunction validateWithCustomRules(schema, ast, customRules, isRelayCompatMode, isSchemaDocument) {\n  const rules = specifiedRules.filter((rule) => {\n    if (rule === NoUnusedFragmentsRule || rule === ExecutableDefinitionsRule) {\n      return false;\n    }\n    if (isRelayCompatMode && rule === KnownFragmentNamesRule) {\n      return false;\n    }\n    return true;\n  });\n  if (customRules) {\n    Array.prototype.push.apply(rules, customRules);\n  }\n  if (isSchemaDocument) {\n    Array.prototype.push.apply(rules, specifiedSDLRules);\n  }\n  const errors = validate(schema, ast, rules);\n  return errors.filter((error) => {\n    if (error.message.indexOf(\"Unknown directive\") !== -1 && error.nodes) {\n      const node = error.nodes[0];\n      if (node && node.kind === Kind.DIRECTIVE) {\n        const name = node.name.value;\n        if (name === \"arguments\" || name === \"argumentDefinitions\") {\n          return false;\n        }\n      }\n    }\n    return true;\n  });\n}\n__name(validateWithCustomRules, \"validateWithCustomRules\");\nconst SEVERITY$1 = {\n  Error: \"Error\",\n  Warning: \"Warning\",\n  Information: \"Information\",\n  Hint: \"Hint\"\n};\nconst DIAGNOSTIC_SEVERITY = {\n  [SEVERITY$1.Error]: 1,\n  [SEVERITY$1.Warning]: 2,\n  [SEVERITY$1.Information]: 3,\n  [SEVERITY$1.Hint]: 4\n};\nconst invariant = /* @__PURE__ */ __name((condition, message) => {\n  if (!condition) {\n    throw new Error(message);\n  }\n}, \"invariant\");\nfunction getDiagnostics(query, schema = null, customRules, isRelayCompatMode, externalFragments) {\n  var _a, _b;\n  let ast = null;\n  if (externalFragments) {\n    if (typeof externalFragments === \"string\") {\n      query += \"\\n\\n\" + externalFragments;\n    } else {\n      query += \"\\n\\n\" + externalFragments.reduce((agg, node) => {\n        agg += print(node) + \"\\n\\n\";\n        return agg;\n      }, \"\");\n    }\n  }\n  try {\n    ast = parse(query);\n  } catch (error) {\n    if (error instanceof GraphQLError) {\n      const range = getRange((_b = (_a = error.locations) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : { line: 0, column: 0 }, query);\n      return [\n        {\n          severity: DIAGNOSTIC_SEVERITY.Error,\n          message: error.message,\n          source: \"GraphQL: Syntax\",\n          range\n        }\n      ];\n    }\n    throw error;\n  }\n  return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\n__name(getDiagnostics, \"getDiagnostics\");\nfunction validateQuery(ast, schema = null, customRules, isRelayCompatMode) {\n  if (!schema) {\n    return [];\n  }\n  const validationErrorAnnotations = mapCat(validateWithCustomRules(schema, ast, customRules, isRelayCompatMode), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Error, \"Validation\"));\n  const deprecationWarningAnnotations = mapCat(validate(schema, ast, [NoDeprecatedCustomRule]), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Warning, \"Deprecation\"));\n  return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\n__name(validateQuery, \"validateQuery\");\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n__name(mapCat, \"mapCat\");\nfunction annotations(error, severity, type) {\n  if (!error.nodes) {\n    return [];\n  }\n  const highlightedNodes = [];\n  error.nodes.forEach((node) => {\n    const highlightNode = node.kind !== \"Variable\" && \"name\" in node && node.name !== void 0 ? node.name : \"variable\" in node && node.variable !== void 0 ? node.variable : node;\n    if (highlightNode) {\n      invariant(error.locations, \"GraphQL validation error requires locations.\");\n      const loc = error.locations[0];\n      const highlightLoc = getLocation(highlightNode);\n      const end = loc.column + (highlightLoc.end - highlightLoc.start);\n      highlightedNodes.push({\n        source: `GraphQL: ${type}`,\n        message: error.message,\n        severity,\n        range: new Range(new Position(loc.line - 1, loc.column - 1), new Position(loc.line - 1, end))\n      });\n    }\n  });\n  return highlightedNodes;\n}\n__name(annotations, \"annotations\");\nfunction getRange(location, queryText) {\n  const parser = onlineParser();\n  const state = parser.startState();\n  const lines = queryText.split(\"\\n\");\n  invariant(lines.length >= location.line, \"Query text must have more lines than where the error happened\");\n  let stream = null;\n  for (let i = 0; i < location.line; i++) {\n    stream = new CharacterStream(lines[i]);\n    while (!stream.eol()) {\n      const style = parser.token(stream, state);\n      if (style === \"invalidchar\") {\n        break;\n      }\n    }\n  }\n  invariant(stream, \"Expected Parser stream to be available.\");\n  const line = location.line - 1;\n  const start = stream.getStartOfToken();\n  const end = stream.getCurrentPosition();\n  return new Range(new Position(line, start), new Position(line, end));\n}\n__name(getRange, \"getRange\");\nfunction getLocation(node) {\n  const typeCastedNode = node;\n  const location = typeCastedNode.loc;\n  invariant(location, \"Expected ASTNode to have a location.\");\n  return location;\n}\n__name(getLocation, \"getLocation\");\nconst SEVERITY = [\"error\", \"warning\", \"information\", \"hint\"];\nconst TYPE = {\n  \"GraphQL: Validation\": \"validation\",\n  \"GraphQL: Deprecation\": \"deprecation\",\n  \"GraphQL: Syntax\": \"syntax\"\n};\nCodeMirror.registerHelper(\"lint\", \"graphql\", (text, options) => {\n  const schema = options.schema;\n  const rawResults = getDiagnostics(text, schema, options.validationRules, void 0, options.externalFragments);\n  const results = rawResults.map((error) => ({\n    message: error.message,\n    severity: error.severity ? SEVERITY[error.severity - 1] : SEVERITY[0],\n    type: error.source ? TYPE[error.source] : void 0,\n    from: CodeMirror.Pos(error.range.start.line, error.range.start.character),\n    to: CodeMirror.Pos(error.range.end.line, error.range.end.character)\n  }));\n  return results;\n});\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","CharacterStream","constructor","sourceText","this","getStartOfToken","_start","getCurrentPosition","_pos","eol","_sourceText","length","sol","peek","charAt","next","char","eat","pattern","_testNextCharacter","eatWhile","match","isMatched","didEat","eatSpace","skipToEnd","skipTo","position","consume","caseFold","token","RegExp","test","substr","slice","Array","startsWith","backUp","num","column","indentation","indent","whitespaces","pos","charCodeAt","current","character","Range","start","end","containsPosition","line","setStart","Position","setEnd","lessThanOrEqualTo","setLine","setCharacter","NoDeprecatedCustomRule","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","invariant","reportError","GraphQLError","name","nodes","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getParentInputType","inputFieldDef","getFields","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType","specifiedSDLRules","LoneSchemaDefinitionRule","UniqueOperationTypesRule","UniqueTypeNamesRule","UniqueEnumValueNamesRule","UniqueFieldDefinitionNamesRule","UniqueDirectiveNamesRule","KnownTypeNamesRule","KnownDirectivesRule","UniqueDirectivesPerLocationRule","PossibleTypeExtensionsRule","UniqueArgumentNamesRule","UniqueInputFieldNamesRule","validateWithCustomRules","schema","ast","customRules","isRelayCompatMode","isSchemaDocument","rules","specifiedRules","filter","rule","NoUnusedFragmentsRule","ExecutableDefinitionsRule","KnownFragmentNamesRule","prototype","push","apply","validate","error","message","indexOf","kind","DIRECTIVE","DIAGNOSTIC_SEVERITY","condition","Error","getDiagnostics","query","externalFragments","_a","_b","reduce","agg","range","getRange","locations","severity","source","validateQuery","validationErrorAnnotations","mapCat","annotations","deprecationWarningAnnotations","Warning","concat","array","mapper","map","type","highlightedNodes","forEach","highlightNode","variable","loc","highlightLoc","getLocation","R","P","location","queryText","parser","o","state","startState","lines","split","stream","i","C","SEVERITY","TYPE","registerHelper","text","options","validationRules","from","Pos","to"],"sourceRoot":""}