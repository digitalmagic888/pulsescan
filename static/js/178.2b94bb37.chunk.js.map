{"version":3,"file":"static/js/178.2b94bb37.chunk.js","mappings":"2JAAIA,G,2BAAYC,OAAOC,gBACnBC,EAAS,CAACC,EAAQC,IAAUL,EAAUI,EAAQ,OAAQ,CAAEC,QAAOC,cAAc,IA2BjF,SAASC,EAAOC,EAAOC,GACrB,IAAIC,EAAIC,EACR,MAAMC,EAASJ,EAAMI,OAErB,QADeA,GAA4B,IAAlBA,EAAOC,OAAmCD,EAAOA,EAAOC,OAAS,KAAqC,QAA7BH,EAAKI,KAAKC,qBAAkC,IAAPL,OAAgB,EAASA,EAAGM,KAAKP,IAAc,EAAI,GAA3ID,EAAMS,cACpC,KAA8B,QAAtBN,EAAKG,KAAKI,cAA2B,IAAPP,OAAgB,EAASA,EAAGQ,aAAe,EACpG,CAzBA,EAAAC,EAAWC,WAAW,qBAAsBH,IAC1C,MAAMI,GAAS,IAAAC,GAAa,CAC1BC,cAAgBC,GAAWA,EAAOC,WAClCC,SAAUC,EACVC,WAAYC,EACZC,aAAc,CAAEC,QAASd,EAAOc,WAElC,MAAO,CACLd,SACAe,WAAYX,EAAOW,WACnBC,MAAOZ,EAAOY,MACd3B,SACAQ,cAAe,YACfoB,KAAM,QACNC,cAAe,CACbC,MAAO,SACPC,QAAS,QAEZ,IAQHnC,EAAOI,EAAQ,UACf,MAAMqB,EAAW,CACfW,YAAa,kBACbC,OAAQ,4DACRC,OAAQ,0DACRC,QAAS,oBAELZ,EAAa,CACjBa,SAAU,EAAC,IAAAC,GAAE,MAAM,IAAAC,GAAK,YAAY,QAAI,IAAAD,GAAE,QAAQ,IAAAA,GAAE,MACpDE,SAAU,CAACC,EAAS,aAAa,IAAAH,GAAE,KAAM,SACzC,KAAAI,CAAMd,GACJ,OAAQA,EAAMe,MACZ,IAAK,SACH,MAAO,cACT,IAAK,SACH,MAAO,cACT,IAAK,cACH,OAAQf,EAAM7B,OACZ,IAAK,IACH,MAAO,YACT,IAAK,IACH,MAAO,cAEX,OAAO,KACT,IAAK,UACH,OAAQ6B,EAAM7B,OACZ,IAAK,OACL,IAAK,QACH,MAAO,eACT,IAAK,OACH,MAAO,YAEX,OAAO,KAEb,EACA6C,YAAa,EAAC,IAAAC,GAAE,SAAU,WAC1BC,YAAa,EAAC,IAAAD,GAAE,SAAU,WAC1BE,aAAc,EAAC,IAAAF,GAAE,UAAW,YAC5BG,UAAW,EAAC,IAAAH,GAAE,UAAW,YACzBI,UAAW,EAAC,IAAAX,GAAE,MAAM,IAAAC,GAAK,SAAS,QAAI,IAAAD,GAAE,QAAQ,IAAAA,GAAE,MAClDY,YAAa,EAAC,IAAAZ,GAAE,MAAM,IAAAC,GAAK,eAAe,QAAI,IAAAD,GAAE,QAAQ,IAAAA,GAAE,MAC1Da,YAAa,CAACV,EAAS,cAAc,IAAAH,GAAE,KAAM,UAE/C,SAASG,EAASW,GAChB,MAAO,CACLA,QACAC,MAAQzB,GAAyB,WAAfA,EAAMe,KACxB,MAAAW,CAAOpD,EAAO0B,GACZ1B,EAAMqD,KAAO3B,EAAM7B,MAAMyD,MAAM,GAAI,EACrC,EAEJ,CACA3D,EAAO4C,EAAU,W","sources":["../node_modules/@graphiql/react/dist/mode.es3.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport \"graphql\";\nimport { o as onlineParser, p, l as list, t, a as opt } from \"./types.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nCodeMirror.defineMode(\"graphql-variables\", (config) => {\n  const parser = onlineParser({\n    eatWhitespace: (stream) => stream.eatSpace(),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize }\n  });\n  return {\n    config,\n    startState: parser.startState,\n    token: parser.token,\n    indent,\n    electricInput: /^\\s*[}\\]]/,\n    fold: \"brace\",\n    closeBrackets: {\n      pairs: '[]{}\"\"',\n      explode: \"[]{}\"\n    }\n  };\n});\nfunction indent(state, textAfter) {\n  var _a, _b;\n  const levels = state.levels;\n  const level = !levels || levels.length === 0 ? state.indentLevel : levels[levels.length - 1] - (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n  return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\n__name(indent, \"indent\");\nconst LexRules = {\n  Punctuation: /^\\[|]|\\{|\\}|:|,/,\n  Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n  String: /^\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?/,\n  Keyword: /^true|false|null/\n};\nconst ParseRules = {\n  Document: [p(\"{\"), list(\"Variable\", opt(p(\",\"))), p(\"}\")],\n  Variable: [namedKey(\"variable\"), p(\":\"), \"Value\"],\n  Value(token) {\n    switch (token.kind) {\n      case \"Number\":\n        return \"NumberValue\";\n      case \"String\":\n        return \"StringValue\";\n      case \"Punctuation\":\n        switch (token.value) {\n          case \"[\":\n            return \"ListValue\";\n          case \"{\":\n            return \"ObjectValue\";\n        }\n        return null;\n      case \"Keyword\":\n        switch (token.value) {\n          case \"true\":\n          case \"false\":\n            return \"BooleanValue\";\n          case \"null\":\n            return \"NullValue\";\n        }\n        return null;\n    }\n  },\n  NumberValue: [t(\"Number\", \"number\")],\n  StringValue: [t(\"String\", \"string\")],\n  BooleanValue: [t(\"Keyword\", \"builtin\")],\n  NullValue: [t(\"Keyword\", \"keyword\")],\n  ListValue: [p(\"[\"), list(\"Value\", opt(p(\",\"))), p(\"]\")],\n  ObjectValue: [p(\"{\"), list(\"ObjectField\", opt(p(\",\"))), p(\"}\")],\n  ObjectField: [namedKey(\"attribute\"), p(\":\"), \"Value\"]\n};\nfunction namedKey(style) {\n  return {\n    style,\n    match: (token) => token.kind === \"String\",\n    update(state, token) {\n      state.name = token.value.slice(1, -1);\n    }\n  };\n}\n__name(namedKey, \"namedKey\");\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","indent","state","textAfter","_a","_b","levels","length","this","electricInput","test","indentLevel","config","indentUnit","C","defineMode","parser","o","eatWhitespace","stream","eatSpace","lexRules","LexRules","parseRules","ParseRules","editorConfig","tabSize","startState","token","fold","closeBrackets","pairs","explode","Punctuation","Number","String","Keyword","Document","p","l","Variable","namedKey","Value","kind","NumberValue","t","StringValue","BooleanValue","NullValue","ListValue","ObjectValue","ObjectField","style","match","update","name","slice"],"sourceRoot":""}